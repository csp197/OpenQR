name: Build and Release OpenQR executables

on:
  push:
    branches: ["feature/pyqt6"]
  pull_request:

permissions:
  contents: write # Required for creating releases and uploading release assets

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-path: dist/OpenQR.exe
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Setup virtual environment and install dependencies
        run: make setup

      - name: Run tests
        run: make test

      - name: Build Windows executable
        run: make dist

      - name: Smoke test Windows executable
        run: |
          dir dist
          dist\OpenQR.exe --help || echo "Executed successfully"

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: OpenQR-windows-executable
          path: dist/OpenQR.exe

  # build-macos:
  #   runs-on: macos-latest
  #   outputs:
  #     artifact-path: dist/OpenQR
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.10"

  #     - name: Setup virtual environment and install dependencies
  #       run: |
  #         python3 -m venv venv
  #         source venv/bin/activate
  #         pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Run tests
  #       run: |
  #         venv/bin/pytest tests/

  #     - name: Build macOS executable
  #       run: make build

  #     - name: Smoke test macOS executable
  #       run: |
  #         ls -la dist/
  #         ./dist/OpenQR --help || echo "Executed successfully"

  #     - name: Upload macOS executable
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: OpenQR-macos-executable
  #         path: dist/OpenQR

  # build-linux:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     artifact-path: dist/OpenQR
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.10"

  #     - name: Setup virtual environment and install dependencies
  #       run: |
  #         python3 -m venv venv
  #         source venv/bin/activate
  #         pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Install Qt dependencies (for PyQt6 / PySide6)
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y \
  #           libegl1 \
  #           libgl1 \
  #           libxkbcommon-x11-0 \
  #           libxcb-xinerama0

  #     - name: Run tests
  #       run: |
  #         venv/bin/pytest tests/

  #     - name: Build Linux executable
  #       run: make build

  #     - name: Smoke test Linux executable
  #       run: |
  #         ls -la dist/
  #         ./dist/OpenQR --help || echo "Executed successfully"

  #     - name: Upload Linux executable
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: OpenQR-linux-executable
  #         path: dist/OpenQR

  release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature/pyqt6' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: OpenQR-windows-executable
          path: dist/

      # - name: Download macOS executable
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: OpenQR-macos-executable
      #     path: dist/

      # - name: Download Linux executable
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: OpenQR-linux-executable
      #     path: dist/

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ github.run_number }}
          git push origin v${{ github.run_number }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: OpenQR Release v${{ github.run_number }}
          body: |
            Automated release of OpenQR executables:
            - Windows (OpenQR.exe)
            # - macOS (OpenQR)
            # - Linux (OpenQR)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows executable to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/OpenQR.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload macOS executable to release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: dist/OpenQR
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Linux executable to release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: dist/OpenQR
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
